[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "confidence"
version = "0.15"
description = "Simple module to load and use configuration in a clean, 'pythonic' way."
keywords = ["configuration"]
readme = "README.md"
authors = [
    {name = "Netherlands Forensic Institute", email = "netherlandsforensicinstitute@users.noreply.github.com"},
]
dependencies = [
    "pyyaml",
]
requires-python = ">=3.8"
license = {text = "Apache Software License 2.0"}
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Utilities",
]

[project.urls]
homepage = "https://github.com/NetherlandsForensicInstitute/confidence/"

[tool.pdm.dev-dependencies]
check = [
    "bandit",
    "darglint",
    "flake8",
    "flake8-annotations-complexity",
    "flake8-bugbear",
    "flake8-broken-line",
    "flake8-commas",
    "flake8-comprehensions",
    "flake8-expression-complexity",
    "flake8-import-order",
    "flake8-pyproject",
    "flake8-quotes",
    "flake8-rst-docstrings",
    "flake8-simplify",
    "mypy",
    "pep8-naming",
    # dependency-specific typing information
    "types-pyyaml",
]
test = [
    "coverage",
    "pytest",
]

[tool.pdm.scripts]
sec-check = {cmd = ["bandit", "--recursive", "confidence/"]}
lint = {cmd = ["flake8", "confidence/"]}
type-check = {cmd = ["mypy", "confidence/"]}
check = {composite = ["sec-check", "lint", "type-check"]}
test = {cmd = [
    "coverage", "run",
    "--branch",
    "--source", "confidence",
    "--module", "pytest",
    "--strict-markers",
    "tests/",
]}
all = {composite = ["check", "test"]}

[tool.flake8]
max-line-length = 120
import-order-style = "google"
application-import-names = "confidence"
docstring-style = "sphinx"

[tool.mypy]
# allow redefinition of inferred / assigned types
allow_redefinition = true
# require all defined functions to be fully typed
allow_incomplete_defs = false
allow_untyped_defs = false
# be strict about optional types
strict_optional = true
# warn about lines in this file that make no sense to mypy
warn_unused_configs = true
